<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Php Functions on This Site</title>
    <link>https://polodev.github.io/ms/tutorial_tags/php-functions/</link>
    <description>Recent content in Php Functions on This Site</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 12 Nov 2018 01:23:53 +0600</lastBuildDate>
    
	<atom:link href="https://polodev.github.io/ms/tutorial_tags/php-functions/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Next and Previous Element in Php Array</title>
      <link>https://polodev.github.io/ms/tutorials/2018-11-12-next-and-previous-element-in-php-array/</link>
      <pubDate>Mon, 12 Nov 2018 01:23:53 +0600</pubDate>
      
      <guid>https://polodev.github.io/ms/tutorials/2018-11-12-next-and-previous-element-in-php-array/</guid>
      <description> getting next element from array function get_next_element ($needle, $haystack) { $index = array_search($needle, $haystack); if (count($haystack) &amp;lt; 2) { return false; } if ($index &amp;lt; (count($haystack) - 1)) { $index++; }else { $index = 0; } return $haystack[$index]; }  Previous Element function get_prev_elemnt($needle, $haystack) { if (count($haystack) &amp;lt; 2) { return false; } $index = array_search($needle, $haystack); if ($index == 0 || $index &amp;lt; 1) { $index = count($haystack) - 1; }else { $index--; } return $haystack[$index]; }  Testing $needle = 3; $haystack = [3, 2, 4, 5, 6]; echo get_prev_elemnt($needle, $haystack);  </description>
    </item>
    
    <item>
      <title>Php Functions - array_values, json_encode, json_decode, array_intersect</title>
      <link>https://polodev.github.io/ms/tutorials/2018-11-12-php-functions-part-one/</link>
      <pubDate>Mon, 12 Nov 2018 01:23:53 +0600</pubDate>
      
      <guid>https://polodev.github.io/ms/tutorials/2018-11-12-php-functions-part-one/</guid>
      <description>array_values() json_encode(); json_decode() array_intersect()  array_values() It will give removed key of associated array
$a = [ &#39;f1&#39; =&amp;gt; &#39;banana&#39;, &#39;f2&#39; =&amp;gt; &#39;apple&#39;, &#39;f3&#39; =&amp;gt; &#39;orange&#39;, ]; print_r (array_values($a));  Output for state above code
Array ( [0] =&amp;gt; banana [1] =&amp;gt; apple [2] =&amp;gt; orange )  json_encode() - encode php to json $a = [ &#39;f1&#39; =&amp;gt; &#39;banana&#39;, &#39;f2&#39; =&amp;gt; &#39;apple&#39;, &#39;f3&#39; =&amp;gt; &#39;orange&#39;, ]; $b = json_encode($a); print_r( $b );  output</description>
    </item>
    
  </channel>
</rss>